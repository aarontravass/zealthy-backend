generator client {
  provider = "prisma-client-js"
  output   = "./prisma-client"
}

generator pothos {
  provider     = "prisma-pothos-types"
  clientOutput = "./prisma-client"
  output       = "./pothos-types.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(cuid())
  firstName    String
  lastName     String
  email        String         @unique
  password     String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Comment      Comment[]
  loginSession LoginSession[]
}

enum TicketStatus {
  NEW
  INPROGRESS
  RESOLVED
}

model Ticket {
  id           String       @id @default(cuid())
  ticketNumber Int          @default(autoincrement())
  email        String
  content      String
  authorName   String
  status       TicketStatus
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  Comment      Comment[]
}

model Comment {
  id        String   @id @default(cuid())
  comment   String
  author    User     @relation(fields: [authorId], references: [id])
  ticket    Ticket   @relation(fields: [ticketId], references: [id])
  authorId  String
  ticketId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model LoginSession {
  id           Int      @id @default(autoincrement())
  authToken    String   @unique
  refreshToken String   @unique
  userId       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}
